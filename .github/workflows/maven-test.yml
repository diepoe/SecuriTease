name: Maven Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: 'maven'
        # Configure authentication for GitHub Packages
        server-id: athenaeum-brew-maven-repo # Must match the server-id in your settings.xml
        server-username: ${{github.actor}}
        server-password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    # Method 1: Using GitHub token directly
    - name: Configure GitHub Packages Authentication
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>athenaeum-brew-maven-repo</id><username>${{ github.actor }}</username><password>${{ secrets.PERSONAL_ACCESS_TOKEN }}</password></server></servers></settings>" > ~/.m2/settings.xml

    # Method 2: Alternative approach using settings.xml
    - name: Create settings.xml
      uses: s4u/maven-settings-action@v3.0.0
      with:
        servers: |
          [{
            "id": "github",
            "username": "${{ github.actor }}",
            "password": "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          },
          {
            "id": "github-packages",
            "username": "${{ github.actor }}",
            "password": "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          }]
        # Optional: Add private repositories if needed
        githubServer: false  # Set to true if you want to add GitHub repository automatically

    - name: Run Tests
      run: mvn -B test
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Generate Test Report
      if: always()
      run: mvn surefire-report:report-only

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/site/

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2