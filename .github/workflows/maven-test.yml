name: Maven Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java and Maven
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: 'maven'
        server-id: github
        server-username: GITHUB_ACTOR
        server-password: GITHUB_TOKEN

    # Method 1: Using GitHub token directly
    - name: Configure GitHub Packages Authentication
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>athenaeum-brew-maven-repo</id><username>${{ github.actor }}</username><password>${{ secrets.GITHUB_TOKEN }}</password></server></servers></settings>" > ~/.m2/settings.xml


    - name: Run Tests
      run: mvn -B test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Test Report
      if: always()
      run: mvn surefire-report:report-only

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/site/

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2